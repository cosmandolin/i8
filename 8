def func2(arg13, arg14):
    if arg14 < arg13:
        var19 = class3()
    else:
        var19 = class5()
    for var20 in func7(arg14, arg13):
        var19.func4(arg13, arg14)
    var37 = func8(arg13, arg14)
    def func9(arg38, arg39):
        var40 = 794 + 1212356404
        var41 = -241 - arg13
        var42 = arg13 + var41 - -1339911155 & var40
        var43 = var41 - arg39
        var44 = var42 - var40
        result = ((var37 ^ arg14 + (arg39 | var43) ^ arg38 ^ var40 - (508 + var42 - var41)) | arg39) - 648722586 | var37
        return result
    var45 = func9(arg14, var37)
    def func10(arg46, arg47):
        var48 = (var45 ^ arg14) ^ var45 & -891
        var49 = var48 & arg46
        var50 = arg14 & (-435 & arg47)
        var51 = var50 | var37 - (arg13 + arg14)
        var52 = var45 | arg13
        var53 = -188 | var45 + var49 + arg14
        var54 = -293 | arg14 & var50
        var55 = arg14 ^ var45 & arg46 | var50
        var56 = (arg47 | var55) & arg14 - arg13
        var57 = var50 + var55 ^ 743
        result = (arg47 - var45) | (var45 | (var52 ^ arg47))
        return result
    var58 = func10(arg14, var37)
    var59 = arg14 ^ arg13 + var58 - var45
    var60 = -810 + (var59 | var59 | var45)
    var61 = var59 | var60 - 321
    var62 = (var59 + var58 - 484) ^ -3786469
    var63 = arg14 - -69 | var58 + var60
    var64 = (arg13 | var59) & var58
    var65 = var60 & var63 ^ var60 & var37
    var66 = arg14 - var45
    var67 = ((var59 & -2008149423) | var64) & arg14
    var68 = var67 - var67 ^ arg13 & var37
    var69 = var59 & (var37 - var66) | var67
    if var65 < var69:
        var70 = var60 ^ var67
    else:
        var70 = (-1912986093 & var60 - var66) - var61
    var71 = 1711853724 - -109 - arg14
    var72 = var37 ^ -778 - -1049198449 - var58
    var73 = (var58 | (var60 + var37)) | var58
    var74 = var58 & var66
    result = (var65 | 940753340 - var74) | arg14 ^ ((var66 ^ var60 + var72 | var71) - var67)
    return result
def func8(arg33, arg34):
    var35 = 0
    for var36 in range(22):
        var35 += arg33 - arg33 ^ arg34
    return var35
def func7(arg21, arg22):
    var23 = (807 & -312) - 401 - 1411096947
    yield var23
    var24 = ((arg22 - arg21) | 418837789) + arg21
    yield var24
    var25 = arg22 + 912
    yield var25
    var26 = arg22 ^ (var24 | arg21 & var25)
    yield var26
    var27 = var24 - (var26 - arg21) + var24
    yield var27
    var28 = var25 - (var25 ^ arg21) | var27
    yield var28
    var29 = arg22 | var26 + (var23 | var24)
    yield var29
    var30 = arg21 - arg21
    yield var30
    var31 = (var27 - var25 & var24) + var23
    yield var31
    var32 = (arg22 - var23 + var27) - var25
    yield var32
class class5(object):
    def func4(self, arg17, arg18):
        return 0
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 | arg2
    var4 = arg1 & 390
    var5 = var4 + arg2 + -378 ^ arg2
    if arg2 < arg1:
        var6 = -233273016 - var4 & var4 & arg1
    else:
        var6 = (arg2 + arg1 - var5) ^ var5
    if var4 < var5:
        var7 = arg1 + (arg1 ^ arg1) & 949
    else:
        var7 = (var5 - arg1) ^ var4
    var8 = arg2 & var5 & var5 ^ -2127750419
    var9 = var8 + var3
    var10 = 586 & var4 ^ var3 ^ arg2
    var11 = -1753907365 | var3
    var12 = var8 ^ var3
    result = arg2 | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    if arg14 < arg13:
        var19 = class3()
    else:
        var19 = class5()
    for var20 in func7(arg14, arg13):
        var19.func4(arg13, arg14)
    var37 = func8(arg13, arg14)
    def func9(arg38, arg39):
        var40 = 794 + 1212356404
        var41 = -241 - arg13
        var42 = arg13 + var41 - -1339911155 & var40
        var43 = var41 - arg39
        var44 = var42 - var40
        result = ((var37 ^ arg14 + (arg39 | var43) ^ arg38 ^ var40 - (508 + var42 - var41)) | arg39) - 648722586 | var37
        return result
    var45 = func9(arg14, var37)
    def func10(arg46, arg47):
        var48 = (var45 ^ arg14) ^ var45 & -891
        var49 = var48 & arg46
        var50 = arg14 & (-435 & arg47)
        var51 = var50 | var37 - (arg13 + arg14)
        var52 = var45 | arg13
        var53 = -188 | var45 + var49 + arg14
        var54 = -293 | arg14 & var50
        var55 = arg14 ^ var45 & arg46 | var50
        var56 = (arg47 | var55) & arg14 - arg13
        var57 = var50 + var55 ^ 743
        result = (arg47 - var45) | (var45 | (var52 ^ arg47))
        return result
    var58 = func10(arg14, var37)
    var59 = arg14 ^ arg13 + var58 - var45
    var60 = -810 + (var59 | var59 | var45)
    var61 = var59 | var60 - 321
    var62 = (var59 + var58 - 484) ^ -3786469
    var63 = arg14 - -69 | var58 + var60
    var64 = (arg13 | var59) & var58
    var65 = var60 & var63 ^ var60 & var37
    var66 = arg14 - var45
    var67 = ((var59 & -2008149423) | var64) & arg14
    var68 = var67 - var67 ^ arg13 & var37
    var69 = var59 & (var37 - var66) | var67
    if var65 < var69:
        var70 = var60 ^ var67
    else:
        var70 = (-1912986093 & var60 - var66) - var61
    var71 = 1711853724 - -109 - arg14
    var72 = var37 ^ -778 - -1049198449 - var58
    var73 = (var58 | (var60 + var37)) | var58
    var74 = var58 & var66
    result = (var65 | 940753340 - var74) | arg14 ^ ((var66 ^ var60 + var72 | var71) - var67)
    return result
def func8(arg33, arg34):
    var35 = 0
    for var36 in range(22):
        var35 += arg33 - arg33 ^ arg34
    return var35
def func7(arg21, arg22):
    var23 = (807 & -312) - 401 - 1411096947
    yield var23
    var24 = ((arg22 - arg21) | 418837789) + arg21
    yield var24
    var25 = arg22 + 912
    yield var25
    var26 = arg22 ^ (var24 | arg21 & var25)
    yield var26
    var27 = var24 - (var26 - arg21) + var24
    yield var27
    var28 = var25 - (var25 ^ arg21) | var27
    yield var28
    var29 = arg22 | var26 + (var23 | var24)
    yield var29
    var30 = arg21 - arg21
    yield var30
    var31 = (var27 - var25 & var24) + var23
    yield var31
    var32 = (arg22 - var23 + var27) - var25
    yield var32
class class5(object):
    def func4(self, arg17, arg18):
        return 0
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 | arg2
    var4 = arg1 & 390
    var5 = var4 + arg2 + -378 ^ arg2
    if arg2 < arg1:
        var6 = -233273016 - var4 & var4 & arg1
    else:
        var6 = (arg2 + arg1 - var5) ^ var5
    if var4 < var5:
        var7 = arg1 + (arg1 ^ arg1) & 949
    else:
        var7 = (var5 - arg1) ^ var4
    var8 = arg2 & var5 & var5 ^ -2127750419
    var9 = var8 + var3
    var10 = 586 & var4 ^ var3 ^ arg2
    var11 = -1753907365 | var3
    var12 = var8 ^ var3
    result = arg2 | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    if arg14 < arg13:
        var19 = class3()
    else:
        var19 = class5()
    for var20 in func7(arg14, arg13):
        var19.func4(arg13, arg14)
    var37 = func8(arg13, arg14)
    def func9(arg38, arg39):
        var40 = 794 + 1212356404
        var41 = -241 - arg13
        var42 = arg13 + var41 - -1339911155 & var40
        var43 = var41 - arg39
        var44 = var42 - var40
        result = ((var37 ^ arg14 + (arg39 | var43) ^ arg38 ^ var40 - (508 + var42 - var41)) | arg39) - 648722586 | var37
        return result
    var45 = func9(arg14, var37)
    def func10(arg46, arg47):
        var48 = (var45 ^ arg14) ^ var45 & -891
        var49 = var48 & arg46
        var50 = arg14 & (-435 & arg47)
        var51 = var50 | var37 - (arg13 + arg14)
        var52 = var45 | arg13
        var53 = -188 | var45 + var49 + arg14
        var54 = -293 | arg14 & var50
        var55 = arg14 ^ var45 & arg46 | var50
        var56 = (arg47 | var55) & arg14 - arg13
        var57 = var50 + var55 ^ 743
        result = (arg47 - var45) | (var45 | (var52 ^ arg47))
        return result
    var58 = func10(arg14, var37)
    var59 = arg14 ^ arg13 + var58 - var45
    var60 = -810 + (var59 | var59 | var45)
    var61 = var59 | var60 - 321
    var62 = (var59 + var58 - 484) ^ -3786469
    var63 = arg14 - -69 | var58 + var60
    var64 = (arg13 | var59) & var58
    var65 = var60 & var63 ^ var60 & var37
    var66 = arg14 - var45
    var67 = ((var59 & -2008149423) | var64) & arg14
    var68 = var67 - var67 ^ arg13 & var37
    var69 = var59 & (var37 - var66) | var67
    if var65 < var69:
        var70 = var60 ^ var67
    else:
        var70 = (-1912986093 & var60 - var66) - var61
    var71 = 1711853724 - -109 - arg14
    var72 = var37 ^ -778 - -1049198449 - var58
    var73 = (var58 | (var60 + var37)) | var58
    var74 = var58 & var66
    result = (var65 | 940753340 - var74) | arg14 ^ ((var66 ^ var60 + var72 | var71) - var67)
    return result
def func8(arg33, arg34):
    var35 = 0
    for var36 in range(22):
        var35 += arg33 - arg33 ^ arg34
    return var35
def func7(arg21, arg22):
    var23 = (807 & -312) - 401 - 1411096947
    yield var23
    var24 = ((arg22 - arg21) | 418837789) + arg21
    yield var24
    var25 = arg22 + 912
    yield var25
    var26 = arg22 ^ (var24 | arg21 & var25)
    yield var26
    var27 = var24 - (var26 - arg21) + var24
    yield var27
    var28 = var25 - (var25 ^ arg21) | var27
    yield var28
    var29 = arg22 | var26 + (var23 | var24)
    yield var29
    var30 = arg21 - arg21
    yield var30
    var31 = (var27 - var25 & var24) + var23
    yield var31
    var32 = (arg22 - var23 + var27) - var25
    yield var32
class class5(object):
    def func4(self, arg17, arg18):
        return 0
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 | arg2
    var4 = arg1 & 390
    var5 = var4 + arg2 + -378 ^ arg2
    if arg2 < arg1:
        var6 = -233273016 - var4 & var4 & arg1
    else:
        var6 = (arg2 + arg1 - var5) ^ var5
    if var4 < var5:
        var7 = arg1 + (arg1 ^ arg1) & 949
    else:
        var7 = (var5 - arg1) ^ var4
    var8 = arg2 & var5 & var5 ^ -2127750419
    var9 = var8 + var3
    var10 = 586 & var4 ^ var3 ^ arg2
    var11 = -1753907365 | var3
    var12 = var8 ^ var3
    result = arg2 | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    if arg14 < arg13:
        var19 = class3()
    else:
        var19 = class5()
    for var20 in func7(arg14, arg13):
        var19.func4(arg13, arg14)
    var37 = func8(arg13, arg14)
    def func9(arg38, arg39):
        var40 = 794 + 1212356404
        var41 = -241 - arg13
        var42 = arg13 + var41 - -1339911155 & var40
        var43 = var41 - arg39
        var44 = var42 - var40
        result = ((var37 ^ arg14 + (arg39 | var43) ^ arg38 ^ var40 - (508 + var42 - var41)) | arg39) - 648722586 | var37
        return result
    var45 = func9(arg14, var37)
    def func10(arg46, arg47):
        var48 = (var45 ^ arg14) ^ var45 & -891
        var49 = var48 & arg46
        var50 = arg14 & (-435 & arg47)
        var51 = var50 | var37 - (arg13 + arg14)
        var52 = var45 | arg13
        var53 = -188 | var45 + var49 + arg14
        var54 = -293 | arg14 & var50
        var55 = arg14 ^ var45 & arg46 | var50
        var56 = (arg47 | var55) & arg14 - arg13
        var57 = var50 + var55 ^ 743
        result = (arg47 - var45) | (var45 | (var52 ^ arg47))
        return result
    var58 = func10(arg14, var37)
    var59 = arg14 ^ arg13 + var58 - var45
    var60 = -810 + (var59 | var59 | var45)
    var61 = var59 | var60 - 321
    var62 = (var59 + var58 - 484) ^ -3786469
    var63 = arg14 - -69 | var58 + var60
    var64 = (arg13 | var59) & var58
    var65 = var60 & var63 ^ var60 & var37
    var66 = arg14 - var45
    var67 = ((var59 & -2008149423) | var64) & arg14
    var68 = var67 - var67 ^ arg13 & var37
    var69 = var59 & (var37 - var66) | var67
    if var65 < var69:
        var70 = var60 ^ var67
    else:
        var70 = (-1912986093 & var60 - var66) - var61
    var71 = 1711853724 - -109 - arg14
    var72 = var37 ^ -778 - -1049198449 - var58
    var73 = (var58 | (var60 + var37)) | var58
    var74 = var58 & var66
    result = (var65 | 940753340 - var74) | arg14 ^ ((var66 ^ var60 + var72 | var71) - var67)
    return result
def func8(arg33, arg34):
    var35 = 0
    for var36 in range(22):
        var35 += arg33 - arg33 ^ arg34
    return var35
def func7(arg21, arg22):
    var23 = (807 & -312) - 401 - 1411096947
    yield var23
    var24 = ((arg22 - arg21) | 418837789) + arg21
    yield var24
    var25 = arg22 + 912
    yield var25
    var26 = arg22 ^ (var24 | arg21 & var25)
    yield var26
    var27 = var24 - (var26 - arg21) + var24
    yield var27
    var28 = var25 - (var25 ^ arg21) | var27
    yield var28
    var29 = arg22 | var26 + (var23 | var24)
    yield var29
    var30 = arg21 - arg21
    yield var30
    var31 = (var27 - var25 & var24) + var23
    yield var31
    var32 = (arg22 - var23 + var27) - var25
    yield var32
class class5(object):
    def func4(self, arg17, arg18):
        return 0
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 | arg2
    var4 = arg1 & 390
    var5 = var4 + arg2 + -378 ^ arg2
    if arg2 < arg1:
        var6 = -233273016 - var4 & var4 & arg1
    else:
        var6 = (arg2 + arg1 - var5) ^ var5
    if var4 < var5:
        var7 = arg1 + (arg1 ^ arg1) & 949
    else:
        var7 = (var5 - arg1) ^ var4
    var8 = arg2 & var5 & var5 ^ -2127750419
    var9 = var8 + var3
    var10 = 586 & var4 ^ var3 ^ arg2
    var11 = -1753907365 | var3
    var12 = var8 ^ var3
    result = arg2 | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    if arg14 < arg13:
        var19 = class3()
    else:
        var19 = class5()
    for var20 in func7(arg14, arg13):
        var19.func4(arg13, arg14)
    var37 = func8(arg13, arg14)
    def func9(arg38, arg39):
        var40 = 794 + 1212356404
        var41 = -241 - arg13
        var42 = arg13 + var41 - -1339911155 & var40
        var43 = var41 - arg39
        var44 = var42 - var40
        result = ((var37 ^ arg14 + (arg39 | var43) ^ arg38 ^ var40 - (508 + var42 - var41)) | arg39) - 648722586 | var37
        return result
    var45 = func9(arg14, var37)
    def func10(arg46, arg47):
        var48 = (var45 ^ arg14) ^ var45 & -891
        var49 = var48 & arg46
        var50 = arg14 & (-435 & arg47)
        var51 = var50 | var37 - (arg13 + arg14)
        var52 = var45 | arg13
        var53 = -188 | var45 + var49 + arg14
        var54 = -293 | arg14 & var50
        var55 = arg14 ^ var45 & arg46 | var50
        var56 = (arg47 | var55) & arg14 - arg13
        var57 = var50 + var55 ^ 743
        result = (arg47 - var45) | (var45 | (var52 ^ arg47))
        return result
    var58 = func10(arg14, var37)
    var59 = arg14 ^ arg13 + var58 - var45
    var60 = -810 + (var59 | var59 | var45)
    var61 = var59 | var60 - 321
    var62 = (var59 + var58 - 484) ^ -3786469
    var63 = arg14 - -69 | var58 + var60
    var64 = (arg13 | var59) & var58
    var65 = var60 & var63 ^ var60 & var37
    var66 = arg14 - var45
    var67 = ((var59 & -2008149423) | var64) & arg14
    var68 = var67 - var67 ^ arg13 & var37
    var69 = var59 & (var37 - var66) | var67
    if var65 < var69:
        var70 = var60 ^ var67
    else:
        var70 = (-1912986093 & var60 - var66) - var61
    var71 = 1711853724 - -109 - arg14
    var72 = var37 ^ -778 - -1049198449 - var58
    var73 = (var58 | (var60 + var37)) | var58
    var74 = var58 & var66
    result = (var65 | 940753340 - var74) | arg14 ^ ((var66 ^ var60 + var72 | var71) - var67)
    return result
def func8(arg33, arg34):
    var35 = 0
    for var36 in range(22):
        var35 += arg33 - arg33 ^ arg34
    return var35
def func7(arg21, arg22):
    var23 = (807 & -312) - 401 - 1411096947
    yield var23
    var24 = ((arg22 - arg21) | 418837789) + arg21
    yield var24
    var25 = arg22 + 912
    yield var25
    var26 = arg22 ^ (var24 | arg21 & var25)
    yield var26
    var27 = var24 - (var26 - arg21) + var24
    yield var27
    var28 = var25 - (var25 ^ arg21) | var27
    yield var28
    var29 = arg22 | var26 + (var23 | var24)
    yield var29
    var30 = arg21 - arg21
    yield var30
    var31 = (var27 - var25 & var24) + var23
    yield var31
    var32 = (arg22 - var23 + var27) - var25
    yield var32
class class5(object):
    def func4(self, arg17, arg18):
        return 0
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 | arg2
    var4 = arg1 & 390
    var5 = var4 + arg2 + -378 ^ arg2
    if arg2 < arg1:
        var6 = -233273016 - var4 & var4 & arg1
    else:
        var6 = (arg2 + arg1 - var5) ^ var5
    if var4 < var5:
        var7 = arg1 + (arg1 ^ arg1) & 949
    else:
        var7 = (var5 - arg1) ^ var4
    var8 = arg2 & var5 & var5 ^ -2127750419
    var9 = var8 + var3
    var10 = 586 & var4 ^ var3 ^ arg2
    var11 = -1753907365 | var3
    var12 = var8 ^ var3
    result = arg2 | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,def func2(arg13, arg14):
    if arg14 < arg13:
        var19 = class3()
    else:
        var19 = class5()
    for var20 in func7(arg14, arg13):
        var19.func4(arg13, arg14)
    var37 = func8(arg13, arg14)
    def func9(arg38, arg39):
        var40 = 794 + 1212356404
        var41 = -241 - arg13
        var42 = arg13 + var41 - -1339911155 & var40
        var43 = var41 - arg39
        var44 = var42 - var40
        result = ((var37 ^ arg14 + (arg39 | var43) ^ arg38 ^ var40 - (508 + var42 - var41)) | arg39) - 648722586 | var37
        return result
    var45 = func9(arg14, var37)
    def func10(arg46, arg47):
        var48 = (var45 ^ arg14) ^ var45 & -891
        var49 = var48 & arg46
        var50 = arg14 & (-435 & arg47)
        var51 = var50 | var37 - (arg13 + arg14)
        var52 = var45 | arg13
        var53 = -188 | var45 + var49 + arg14
        var54 = -293 | arg14 & var50
        var55 = arg14 ^ var45 & arg46 | var50
        var56 = (arg47 | var55) & arg14 - arg13
        var57 = var50 + var55 ^ 743
        result = (arg47 - var45) | (var45 | (var52 ^ arg47))
        return result
    var58 = func10(arg14, var37)
    var59 = arg14 ^ arg13 + var58 - var45
    var60 = -810 + (var59 | var59 | var45)
    var61 = var59 | var60 - 321
    var62 = (var59 + var58 - 484) ^ -3786469
    var63 = arg14 - -69 | var58 + var60
    var64 = (arg13 | var59) & var58
    var65 = var60 & var63 ^ var60 & var37
    var66 = arg14 - var45
    var67 = ((var59 & -2008149423) | var64) & arg14
    var68 = var67 - var67 ^ arg13 & var37
    var69 = var59 & (var37 - var66) | var67
    if var65 < var69:
        var70 = var60 ^ var67
    else:
        var70 = (-1912986093 & var60 - var66) - var61
    var71 = 1711853724 - -109 - arg14
    var72 = var37 ^ -778 - -1049198449 - var58
    var73 = (var58 | (var60 + var37)) | var58
    var74 = var58 & var66
    result = (var65 | 940753340 - var74) | arg14 ^ ((var66 ^ var60 + var72 | var71) - var67)
    return result
def func8(arg33, arg34):
    var35 = 0
    for var36 in range(22):
        var35 += arg33 - arg33 ^ arg34
    return var35
def func7(arg21, arg22):
    var23 = (807 & -312) - 401 - 1411096947
    yield var23
    var24 = ((arg22 - arg21) | 418837789) + arg21
    yield var24
    var25 = arg22 + 912
    yield var25
    var26 = arg22 ^ (var24 | arg21 & var25)
    yield var26
    var27 = var24 - (var26 - arg21) + var24
    yield var27
    var28 = var25 - (var25 ^ arg21) | var27
    yield var28
    var29 = arg22 | var26 + (var23 | var24)
    yield var29
    var30 = arg21 - arg21
    yield var30
    var31 = (var27 - var25 & var24) + var23
    yield var31
    var32 = (arg22 - var23 + var27) - var25
    yield var32
class class5(object):
    def func4(self, arg17, arg18):
        return 0
class class3(object):
    def func4(self, arg15, arg16):
        return 0
def func1(arg1, arg2):
    var3 = arg2 | arg2
    var4 = arg1 & 390
    var5 = var4 + arg2 + -378 ^ arg2
    if arg2 < arg1:
        var6 = -233273016 - var4 & var4 & arg1
    else:
        var6 = (arg2 + arg1 - var5) ^ var5
    if var4 < var5:
        var7 = arg1 + (arg1 ^ arg1) & 949
    else:
        var7 = (var5 - arg1) ^ var4
    var8 = arg2 & var5 & var5 ^ -2127750419
    var9 = var8 + var3
    var10 = 586 & var4 ^ var3 ^ arg2
    var11 = -1753907365 | var3
    var12 = var8 ^ var3
    result = arg2 | arg2
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 13'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 75'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
